from django.db import models
import datetime
from django.utils import timezone

# Create your models here.
class dcnm_network_device(models.Model):
    dcnm_addr = models.CharField(max_length=200)
    asn = models.CharField(max_length=200)
    deviceType = models.CharField(max_length=200)
    fabricId = models.CharField(max_length=200)
    fabricName = models.CharField(primary_key=True, max_length=200)
    fabricTechnology = models.CharField(max_length=200)
    fabricType = models.CharField(max_length=200)
    id = models.CharField(max_length=200)
    networkTemplate = models.CharField(max_length=200)
    ADVERTISE_PIP_BGP = models.CharField(max_length=200)
    ANYCAST_GW_MAC = models.CharField(max_length=200)
    ANYCAST_RP_IP_RANGE = models.CharField(max_length=200)
    BFD_ENABLE = models.CharField(max_length=200)
    BFD_AUTH_ENABLE = models.CharField(max_length=200)
    BGP_AS = models.CharField(max_length=200)
    BGP_AUTH_ENABLE = models.CharField(max_length=200)
    DCI_SUBNET_RANGE = models.CharField(max_length=200)
    DCI_SUBNET_TARGET_MASK = models.CharField(max_length=200)
    DHCP_ENABLE = models.CharField(max_length=200)
    ENABLE_EVPN = models.CharField(max_length=200)
    ENABLE_NXAPI = models.CharField(max_length=200)
    FABRIC_INTERFACE_TYPE = models.CharField(max_length=200)
    FABRIC_MTU = models.CharField(max_length=200)
    FABRIC_NAME = models.CharField(max_length=200)
    L2_SEGMENT_ID_RANGE = models.CharField(max_length=200)
    L3_PARTITION_ID_RANGE = models.CharField(max_length=200)
    LINK_STATE_ROUTING = models.CharField(max_length=200)
    LINK_STATE_ROUTING_TAG = models.CharField(max_length=200)
    LOOPBACK0_IP_RANGE = models.CharField(max_length=200)
    LOOPBACK1_IP_RANGE = models.CharField(max_length=200)
    MULTICAST_GROUP_SUBNET = models.CharField(max_length=200)
    NETWORK_VLAN_RANGE = models.CharField(max_length=200)
    OSPF_AREA_ID = models.CharField(max_length=200)
    OSPF_AUTH_ENABLE = models.CharField(max_length=200)
    REPLICATION_MODE = models.CharField(max_length=200)
    RR_COUNT = models.CharField(max_length=200)
    SERVICE_NETWORK_VLAN_RANGE = models.CharField(max_length=200)
    SUBNET_RANGE = models.CharField(max_length=200)
    replicationMode = models.CharField(max_length=200)
    templateName = models.CharField(max_length=200)
    last_updated = models.DateTimeField(default=timezone.now)

    def __str__(self):
        return self.switch_name

class dcnm_network_switch(models.Model):
    dcnm_addr = models.CharField(max_length=200)
    activeSupSlot = models.CharField(max_length=200)
    availPorts = models.IntegerField()
    consistencyState = models.CharField(max_length=200)
    cpuUsage = models.IntegerField()
    fabricName = models.CharField(max_length=200)
    health = models.IntegerField()
    hostName = models.CharField(max_length=200)
    ipAddress = models.CharField(max_length=200)
    isVpcConfigured = models.CharField(max_length=200)
    keepAliveState = models.CharField(max_length=200, default='None')
    licenseDetail = models.CharField(max_length=200)
    licenseViolation = models.CharField(max_length=200)
    logicalName = models.CharField(max_length=200)
    managable = models.CharField(max_length=200)
    memoryUsage = models.IntegerField(max_length=200)
    mode = models.CharField(max_length=200)
    model = models.CharField(max_length=200)
    network = models.CharField(max_length=200)
    numberOfPorts = models.CharField(max_length=200)
    peer = models.CharField(max_length=200)
    present = models.CharField(max_length=200)
    release = models.CharField(max_length=200)
    serialNumber = models.CharField(max_length=200)
    upTime = models.BigIntegerField()
    vendor = models.CharField(max_length=200)
    vpcDomain = models.CharField(max_length=200)
    last_updated = models.DateTimeField(default=timezone.now)

    def __str__(self):
        return self.switch_name
